C51 COMPILER V9.60.0.0   UART                                                              02/01/2021 12:13:41 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Output\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Library\StdDriver\src\uart.c OPTIMIZE(7,SPEED) BROWSE INCDIR(..\Libra
                    -ry\Device\Include;..\Library\StdDriver\inc) DEBUG OBJECTEXTEND PRINT(.\List\uart.lst) TABS(2) OBJECT(.\Output\uart.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2020 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/29/2020
  12          //********************************************************************************************************
             -***
  13          
  14          #include "ML51.h"
  15          bit UART0PRINTFG=0,UART1PRINTFG=0, uart0_receive_flag = 0, uart1_receive_flag;
  16          unsigned char uart0_receive_data, uart1_receive_data;
  17          
  18          
  19          void Enable_UART0_VCOM_printf(void)
  20          {
  21   1        /* UART0 initial setting
  22   1        ** include uart.c in Library for UART initial setting
  23   1        **UART0 define P3.1 TXD multi function setting
  24   1        **/
  25   1          MFP_P31_UART0_TXD;
  26   1          P31_QUASI_MODE;
  27   1          UART_Open(24000000,UART0_Timer3,115200);
  28   1          ENABLE_UART0_PRINTF;
  29   1      }
  30          /* UART0 interrupt subroutine */
  31          /**
  32           * @brief       UART0 interrupt subroutine
  33           * @param       UART0~3, baudrate value
  34           * @return      none
  35           * @details     none
  36           * @note        Since printf function TI must be 1. Check with printf flag, for printf enable, not clear T
             -I . 
  37           */
  38          void UART0_ISR(void) interrupt 4
  39          {
  40   1          _push_(SFRS);
  41   1          if (RI)
  42   1          {
  43   2              uart0_receive_flag = 1;
  44   2              uart0_receive_data = SBUF;
  45   2              clr_SCON_RI;                                         // Clear RI (Receive Interrupt).
  46   2          }
C51 COMPILER V9.60.0.0   UART                                                              02/01/2021 12:13:41 PAGE 2   

  47   1          if (TI)
  48   1          {
  49   2      //        if (!UART0PRINTFG)
  50   2      //            TI = 0;
  51   2          }
  52   1          _pop_(SFRS);
  53   1      }
  54          
  55          
  56          /* UART1 interrupt subroutine */
  57          void UART1_ISR(void) interrupt 15
  58          {
  59   1          _push_(SFRS);
  60   1          if (RI_1)
  61   1          {
  62   2              uart1_receive_flag = 1;
  63   2              uart1_receive_data = SBUF1;
  64   2              RI_1=0;                             /* clear reception flag for next reception */
  65   2          }
  66   1          if (TI_1)
  67   1              if (!UART1PRINTFG)
  68   1                  TI_1 = 0;                       /* if emission occur */
  69   1          _pop_(SFRS);
  70   1      }
  71          
  72          /**
  73           * @brief       UART no interrupt enable setting 
  74           * @param       UART0~3, baudrate value
  75           * @return      none
  76           * @details     none
  77           * @note        max baud rate = 1.5MHz when Fsys = 24MHz
  78           */
  79          //********************************************************************************************************
             -********  
  80          //**** UART Enable Setting  
  81          //**** 1. Define Fsys value(value)
  82          //**** 2. Select UART port(UART0_Timer1 / UART0_Timer3 / UART1_Timer3 / UART2/UART3) 
  83          //**** 3. Define baudrate (value)
  84          //**** For example: UART_Open(24000000,UART0_Timer1,115200)
  85          void UART_Open(unsigned long u32SysClock, unsigned char u8UARTPort,unsigned long u32Baudrate)
  86          {
  87   1        switch(u8UARTPort)
  88   1        {
  89   2            case UART0_Timer1:
  90   2            case UART0:
  91   2                SFRS = 0x00;
  92   2                SCON = 0x50;             /*UART0 Mode1,REN=1,TI=1 */
  93   2                TMOD |= 0x20;            /*Timer1 Mode1*/
  94   2                set_PCON_SMOD;          /*UART0 Double Rate Enable*/
  95   2                set_CKCON_T1M;
  96   2                clr_T3CON_BRCK;          /*Serial port 0 baud rate clock source = Timer1*/
  97   2                TH1 = 256 - (u32SysClock/16/u32Baudrate);
  98   2                set_TCON_TR1;
  99   2            break;
 100   2            case UART0_Timer3:
 101   2                SFRS = 0x00;
 102   2                SCON = 0x50;            /*UART0 Mode1,REN=1,TI=1*/
 103   2                set_PCON_SMOD;          /*UART0 Double Rate Enable*/
 104   2                T3CON &= 0xF8;          /*T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)*/
 105   2                set_T3CON_BRCK;         /*UART0 baud rate clock source = Timer3*/
 106   2                RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));
 107   2                RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));
C51 COMPILER V9.60.0.0   UART                                                              02/01/2021 12:13:41 PAGE 3   

 108   2                set_T3CON_TR3;          /*Trigger Timer3*/
 109   2            break;
 110   2            case UART1_Timer3:
 111   2            case UART1:
 112   2                SFRS = 0x00;
 113   2                S1CON = 0x50;           /*UART1 Mode1,REN_1=1 */
 114   2                T3CON = 0x88;           /*T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1*/
 115   2                RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));
 116   2                RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));
 117   2                set_T3CON_TR3;          /* Trigger Timer3 */
 118   2            break; 
 119   2      
 120   2        }
 121   1      }
 122          //********************************************************************************************************
             -********  
 123          //**** UART Receive data without interrupt  
 124          //**** For example: UART_Open(UART0_Timer1,1200)
 125          unsigned char UART_Receive_Data(unsigned char UARTPort)
 126          {
 127   1          unsigned char c;
 128   1          SFRS = 0x00;
 129   1          switch (UARTPort)
 130   1          {
 131   2            case UART0:
 132   2              while (!RI);
 133   2              c = SBUF;
 134   2              RI = 0;
 135   2            break;
 136   2            case UART1:
 137   2              while (!RI_1);
 138   2              c = SBUF1;
 139   2              RI_1 = 0;
 140   2            break;
 141   2          }
 142   1          return (c);
 143   1      }
 144          //********************************************************************************************************
             -********  
 145          //**** UART transfer data without interrupt  
 146          //**** For example: UART_Send_Data(UART0,0x55)
 147          void UART_Send_Data(unsigned char UARTPort, unsigned char c)
 148          {
 149   1          SFRS = 0x00;
 150   1          switch (UARTPort)
 151   1          {
 152   2            case UART0:
 153   2              TI = 0;
 154   2              SBUF = c;
 155   2              while(TI==0);
 156   2              TI = 0;
 157   2            break;
 158   2            case UART1:
 159   2              TI_1 = 0;
 160   2              SBUF1 = c;
 161   2              while(TI_1==0);
 162   2              TI_1 = 0;
 163   2            break;
 164   2          }
 165   1      }
 166          
 167          
C51 COMPILER V9.60.0.0   UART                                                              02/01/2021 12:13:41 PAGE 4   

 168          /**
 169           * @brief       UART interrupt enable setting 
 170           * @param       u8UARTPort: UART0/UART1/UART2/UART3 baudrate value
 171           * @param       u8UARTINTStatus: Disable/Enable
 172           * @return      none
 173           * @details     none
 174           * @note        max baud rate = 1.5MHz when Fsys = 24MHz
 175           */
 176          void UART_Interrupt_Enable(unsigned char u8UARTPort, unsigned char u8UARTINTStatus)
 177          {
 178   1          switch (u8UARTPort)
 179   1          {
 180   2              case UART0: 
 181   2                switch(u8UARTINTStatus)
 182   2                {
 183   3                  case Disable: clr_IE_ES; break;
 184   3                  case Enable:  set_IE_ES; break;
 185   3                }
 186   2              break;
 187   2              case UART1:
 188   2                switch(u8UARTINTStatus)
 189   2                {
 190   3                  case Disable: clr_EIE1_ES1; break;
 191   3                  case Enable:  set_EIE1_ES1; break;
 192   3                }
 193   2              break;
 194   2          }
 195   1      }
 196          
 197          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    516    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
